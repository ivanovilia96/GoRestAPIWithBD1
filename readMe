Требуемая БД\Версия - MySql - 8.0.23 -
   ->требуемые данные для взаимодействия с бд (логин пароль имя БД и тд) представлены в файле databaseConnect.go (можно изменить на свое),
   -> также требуется 2 таблицы, sql запросы для создания можно найти в файле sqlQueries (по порядку соответственно)
   -> после данных действий с БД мы можем запустить файл с разширением .exe (это go build) и начинать работу
   -> тесты при наличии таблиц(по инструкции выше) автоматически создадут до теста и удалят  после теста запись в БД
 тестировал на https://reqbin.com/ (online REST), +  разрешил всем по CORS (https://extendsclass.com/rest-client-online.html - это проверить тут можно)

 (http://localhost:8080/)

 программа - .exe файл
 тесты - в папке проекта в командной строке написать команду "go test"

Список АПИ -

Метод получения списка объявлений -> GET
        /notifications/page={pageNumber}
            - pageNumber - номер страницы , сортировка полей будет по "цена, дата публикации"
            на странице 10 записей
            (cтандартная сортировка от min to max)

        -> пример ответа: {
                              "Data": [{
                                  "Name": "2",
                                  "ImageData": [{
                                      "String": " 2",
                                      "Valid": true // означает "не является ли string null значением"
                                  }],  // последствия NullString , исправлю после тестов и контейнеризации
                                  "Price": 22,
                                  "Description": ""
                              }]
                          }


Метод получения списка объявлений c сортировкой -> GET
        /notifications/page={pageNumber}/sort/price={priceSortType}/date={dateSortType}
        /notifications/page=1/sort/price=max-to-min/date=max-to-min
         - где:
        pageNumber - номер страницы,
        пагинация - 10 записей
        priceSortType может быть или max-to-min или любым( тогда применится стандартная сортировка для данного поля)
        dateSortType может быть или max-to-min или любым( тогда применится стандартная сортировка для данного поля)
        (cтандартная сортировка от min to max)
        -> пример http://localhost:8080/notifications/page=1/sort/price=max-to-min/date=max-to-min
        -> возвратит то же самое что и в /notifications/page={pageNumber} только с сортировкой по полям

Метод получения конкретного объявления -> GET
        /notification/{id} - возвращает конкретное обьявление
        /notification/3
        - Где:
        id - идентификатор обьявления
        -> возвратит {
                         "Data": {
                             "Name": "nameam1",
                             "ImageData": [{
                                 "String": " 5ы",
                                 "Valid": true
                             }],
                             "Price": 42,
                             "Description": ""
                         }
                     }


        /notification/{id}/optionalFields={fields} - возвратит конкретное обьявление вместе с доп полями
        /notification/3/optionalFields=description,allImages
        - где id = id обьявления
        в полях (fields) могут быть description и\или allImages,
        оба опциональны, могут использоваться одновременно, разделение дополнительных полей должно осужествляться
        только с помощью запятой "," (порядок не важен, важно разделение через запятую)
        -> возвратит (и описание и все картинки){
                                                    "Data": {
                                                        "Name": "3",
                                                        "ImageData": [{
                                                            "String": " 3",
                                                            "Valid": true
                                                        }, {
                                                            "String": " 2",
                                                            "Valid": true
                                                        }, {
                                                            "String": " 2",
                                                            "Valid": true
                                                        }],
                                                        "Price": 33,
                                                        "Description": "3"
                                                    }
                                                }


Метод создания объявления: -> PUT
    /notification
    тело запроса принимает параметры:
    name string < 200 символов
    description string < 1000 символов
    image_data []string < 4 элементов
    price int
    -> при нарушении валидации на данном урле вам будет возвращено сообщение о том, в чем проблема с соответствубщим статусом "плохой запрос"
    пример body запроса:
    {
        "name":"nameame note2name not2nanote2name note2name note2name note2",
        "description":"2dssd2",
        "image_data":["5ы","4ф","3с"],
        "price": 42
    }

    пример ответа :
    {
        "Id": "18",
        "Status": 202
    }

 -------

Вопросы\ответы:
1 - мы будем сортировать только по 2м полям одновременно? (price и date) как сделано в урле /sort/price={priceSortType}/date={dateSortType}
или нужно создать отдельные урлы на отдельную сортировке?  по типу sort/price={priceSortType} и sort/date={dateSortType} ???
2 - в /notification/3/optionalFields=description,allImages, сделал что бы по умолчанию description тоже в ответе был,
 только он будет пустой строкой, что бы не плодить структуры с отличием в 1 поле, на фронтенде там все равно пустая строка "" == false
3 - не больше 3х ссылок на фото, это при добавлении нельзя добавить больше 3х ссылок ? или вообще в бд не может храниться больше 3х ссылок на 1 обьявлении,
т.к, сейчас каждое создаваемое обьявление новое, сделаю валидацию при добавлении

4 - вопрос в файле endpoints_test.go закоментирован
5 - сделал там в тестах авто добавление\удаление записей в нашу бд, там есть какое то решение в интернете с несколькими
сторонними библиотеками,не думаю что в данный момент нужно лишние Х строк кода

----
проверки \ API сделал только те, которые в задании, все остальное можно добавить по аналогии с имещимся кодом,
 т.е. 2 одинаковых обьявления фактически можно создать и тд
