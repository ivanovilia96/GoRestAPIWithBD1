Список АПИ -
 Требуемая БД\Версия - MySql - 8.0.23 -
   ->требуемые данные для взаимодействия с бд (логин пароль имя БД и тд) представлены в файле databaseConnect.go (можно изменить на свое),
   -> также требуется 2 таблицы, sql запросы для создания можно найти в файле sqlQueries (по порядку соответственно)
   -> после данных действий с БД мы можем запустить файл с разширением .exe (это go build) и начинать работу
 тестировал на https://reqbin.com/ (online REST), +  разрешил всем по CORS (https://extendsclass.com/rest-client-online.html - это проверить тут можно)
 (http://localhost:8080/)

Метод получения списка объявлений -> GET
        /notifications/page={pageNumber}
            - pageNumber - номер страницы , сортировка полей будет по "цена, дата публикации"
            на странице 10 записей
            (cтандартная сортировка от min to max)


Метод получения списка объявлений c сортировкой -> GET
        /notifications/page={pageNumber}/sort/price={priceSortType}/date={dateSortType}
        /notifications/page=1/sort/price=max-to-min/date=max-to-min
         - где:
        pageNumber - номер страницы,
        пагинация - 10 записей
        priceSortType может быть или max-to-min или любым( тогда применится стандартная сортировка для данного поля)
        dateSortType может быть или max-to-min или любым( тогда применится стандартная сортировка для данного поля)
        (cтандартная сортировка от min to max)
        -> пример http://localhost:8080/notifications/page=1/sort/price=max-to-min/date=max-to-min
        -> возвратит {
                 "Data": [{
                     "Name": "name2 300",
                     "ImageData": ["iamge data"],// ссылка на главное фото
                     "Price": 300,
                     "Description": "" // что бы не создавать для многих типов ответов разные стукруты , на фронте все равно "" = false
                 }, {
                     "Name": "Имя 300",
                     "ImageData": ["data3232"],
                     "Price": 200,
                     "Description": ""
                 }]
             }

Метод получения конкретного объявления -> GET
        /notification/{id} - возвращает конкретное обьявление
        /notification/3
        - Где:
        id - идентификатор обьявления
        -> возвратит {
                 "Data": {
                     "Name": "name2 300",
                     "ImageData": ["iamge data"], // это "галавная картинка (как по заданию)" сделал массивом что бы не запутывались потом в 10 структурах
                     "Price": 300,
                     "Description": "" // вопрос: здесь как бы возвращается поле с название Description(потому что это дефаулт вэлью из структуры которую я использую),
                      в задании не должно, получается, выхода 2, 1 - возвращать пустой Description что на фронте все равно false("")+ у них будет АПИ с описанием,
                      и они будут знать когда ждать какие данные , 2 - сделать еще Х структур которые будут отличаться на 1 поле? я выбрал пока что 1й вариант
                 }
             }


        /notification/{id}/optionalFields={fields} - возвратит конкретное обьявление вместе с доп полями
        /notification/3/optionalFields=description,allImages
        - где id = id обьявления
        в полях (fields) могут быть description и\или allImages,
        оба опциональны, могут использоваться одновременно, разделение дополнительных полей должно осужествляться
        только с помощью запятой "," (порядок не важен, важно разделение через запятую)
        -> возвратит (и описание и все картинки){
                                            "Data": {
                                                "Name": "Имя 300",
                                                "ImageData": ["data3232", "date image"], // список всех картинок принаждежащих обьявлению
                                                "Price": 200,
                                                "Description": "322 descr"
                                            }
                                        }


Метод создания объявления: -> PUT
    /notification
    тело запроса принимает параметры:
    name string < 200 символов
    description string < 1000 символов
    image_data []string < 4 элементов
    price int
    -> при нарушении валидации на данном урле вам будет возвращено сообщение о том, в чем проблема с соответствубщим статусом "плохой запрос"
    пример body запроса:
    {
        "name":"nameame note2name not2nanote2name note2name note2name note2",
        "description":"2dssd2",
        "image_data":["5ы","4ф","3с"],
        "price": 42
    }

    пример ответа :
    {
        "Id": "18",
        "Status": 202
    }

 -------




Вопрос:
1 - мы будем сортировать только по 2м полям одновременно? (price и date) как сделано в урле /sort/price={priceSortType}/date={dateSortType}
или нужно создать отдельные урлы на отдельную сортировке?  по типу sort/price={priceSortType} и sort/date={dateSortType} ???
2 - в /notification/3/optionalFields=description,allImages, сделал что бы по умолчанию description тоже в ответе был,
 только он будет пустой строкой, что бы не плодить структуры с отличием в 1 поле, на фронтенде там все равно пустая строка "" = false
3 - не больше 3х ссылок на фото, это при добавлении нельзя добавить больше 3х ссылок ? или вообще в бд не может храниться больше 3х ссылок на 1 обьявлении,
т.к, сейчас каждое создаваемое обьявление новое, сделаю валидацию при добавлении

----
проверки \ API сделал только те, которые в задании, все остальное можно добавить по аналогии с имещимся кодом,
 т.е. 2 одинаковых обьявления фактически можно создать и тд
